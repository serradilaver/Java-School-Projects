
import java.math.BigDecimal;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.SpinnerNumberModel;
import javax.swing.table.DefaultTableModel;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author Serra
 */
public class ShoppingPage extends javax.swing.JFrame {

    /**
     * Creates new form ShoppingPage
     */
    private final DefaultTableModel productTable = new DefaultTableModel();
    User user;
    static final String connectionString = "jdbc:mysql://127.0.0.1:3306/"
            + "sales_tracking_db?user=root&password=123987456Asd";

    public ShoppingPage(User user) {
        initComponents();
        this.user = user;
       
        productTable.addColumn("id");
        productTable.addColumn("name");
        productTable.addColumn("price");
        productTable.addColumn("stock");
        fillTable();
        
        tbl_product.setDefaultEditor(Object.class, null);
    }
    
        public final void fillTable() {
        ArrayList<Product> products = ProductDatabaseManager.getProducts();
        productTable.setColumnIdentifiers(new Object[]{"ID", "Name", "Price", "Stock"});
         if (products.isEmpty()) {
            System.out.println("Unable to retrieve data from database.");
            return;
        }
        for (Product product : products) {
            productTable.addRow(new Object[]{product.getId(), product.getName(), product.getPrice(), product.getStock()});
        }

        tbl_product.setModel(productTable);
    }


    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tbl_product = new javax.swing.JTable();
        btn_refresh = new javax.swing.JToggleButton();
        btn_logout = new javax.swing.JToggleButton();
        btn_shoppingCart = new javax.swing.JToggleButton();
        spn_quantity = new javax.swing.JSpinner();
        btn_add = new javax.swing.JToggleButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tbl_product.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        tbl_product.setModel(productTable);
        jScrollPane1.setViewportView(tbl_product);

        btn_refresh.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btn_refresh.setText("Refresh");
        btn_refresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_refreshActionPerformed(evt);
            }
        });

        btn_logout.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btn_logout.setText("Log out");
        btn_logout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_logoutActionPerformed(evt);
            }
        });

        btn_shoppingCart.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btn_shoppingCart.setText("Shopping Cart");
        btn_shoppingCart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_shoppingCartActionPerformed(evt);
            }
        });

        spn_quantity.setModel(new SpinnerNumberModel(1, 1, Integer.MAX_VALUE, 1));

        btn_add.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btn_add.setSelected(true);
        btn_add.setText("Add to Shopping Cart");
        btn_add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_addActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(spn_quantity, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(41, 41, 41)
                        .addComponent(btn_add)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btn_refresh)
                        .addGap(40, 40, 40))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btn_logout)
                            .addComponent(btn_shoppingCart)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 900, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(422, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(btn_logout)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 57, Short.MAX_VALUE)
                .addComponent(btn_shoppingCart)
                .addGap(35, 35, 35)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 450, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(56, 56, 56)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btn_refresh)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(spn_quantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btn_add)))
                .addGap(49, 49, 49))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btn_refreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_refreshActionPerformed
        // TODO add your handling code here:
        productTable.setRowCount(0); // Mevcut satırları temizle
        fillTable();
    }//GEN-LAST:event_btn_refreshActionPerformed

    private void btn_logoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_logoutActionPerformed
        // TODO add your handling code here:
        LoginPage login = new LoginPage();
        login.setVisible(true);
        dispose();
    }//GEN-LAST:event_btn_logoutActionPerformed

    private void btn_addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_addActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = tbl_product.getSelectedRow();
        if (selectedRowIndex < 0) {
            JOptionPane.showMessageDialog(null, "Please select a product.");
            return;
        }        
        int productId = (int) tbl_product.getValueAt(selectedRowIndex, 0);
        int quantity = (int) spn_quantity.getValue();
       
        Product selectedProduct = ProductDatabaseManager.getProduct(productId);
        int currentStock = selectedProduct.getStock();
        int updatedStock = currentStock - quantity;
        int id = UserDatabaseManager.getUserIdByEmail(this.user.getEmail());
        
        boolean isProductInCart = UserDatabaseManager.isProductInShoppingCart(id, productId);
        
        if (selectedProduct == null ||selectedProduct.getStock() < quantity) {
            JOptionPane.showMessageDialog(null, "Insufficient stock for the selected product.");
            return;
        }

        boolean updateStockResult = ProductDatabaseManager.updateProductStock(productId, selectedProduct.getStock() - quantity);
        if (!updateStockResult) {
            JOptionPane.showMessageDialog(null, "Error updating product stock.");
            return;
        }
        
        if (isProductInCart) {
   
            int currentQuantityInCart = UserDatabaseManager.getProductQuantityInShoppingCart(id, productId);
            int newQuantity = currentQuantityInCart + quantity;
                
            boolean updateCartResult = UserDatabaseManager.updateShoppingCartItemQuantity(id, productId, newQuantity);
            if (updateCartResult) {
                tbl_product.setValueAt(updatedStock, selectedRowIndex, 3);
                JOptionPane.showMessageDialog(null, "Product quantity in cart updated successfully!");
            } else {
                JOptionPane.showMessageDialog(null, "Error updating product quantity in cart!");
                ProductDatabaseManager.updateProductStock(productId, currentStock);
            }
        }else{        
            String productName = selectedProduct.getName();
            BigDecimal productPrice = selectedProduct.getPrice();
            boolean addToShoppingCartResult = UserDatabaseManager.addToShoppingCart(id, productId, quantity, productName, productPrice);
            if (addToShoppingCartResult) {
                 tbl_product.setValueAt(updatedStock, selectedRowIndex, 3);
                JOptionPane.showMessageDialog(null, "Added to shopping cart successfully!");
            } else {
                JOptionPane.showMessageDialog(null, "Error adding to shopping cart!");
                ProductDatabaseManager.updateProductStock(productId, currentStock);
            }
        }
    }//GEN-LAST:event_btn_addActionPerformed

    private void btn_shoppingCartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_shoppingCartActionPerformed
        // TODO add your handling code here:
        ShoppingCartPage sc = new ShoppingCartPage(user);
        sc.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btn_shoppingCartActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ShoppingPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ShoppingPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ShoppingPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ShoppingPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JToggleButton btn_add;
    private javax.swing.JToggleButton btn_logout;
    private javax.swing.JToggleButton btn_refresh;
    private javax.swing.JToggleButton btn_shoppingCart;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSpinner spn_quantity;
    private javax.swing.JTable tbl_product;
    // End of variables declaration//GEN-END:variables
}
