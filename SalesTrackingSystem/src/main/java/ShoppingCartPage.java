


import java.math.BigDecimal;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

public class ShoppingCartPage extends javax.swing.JFrame {

    private final DefaultTableModel table = new DefaultTableModel();
    User user;
    static final String connectionString = "jdbc:mysql://127.0.0.1:3306/"
            + "sales_tracking_db?user=root&password=123987456Asd";

    public ShoppingCartPage(User user) {
        this.user = user;
        initComponents();
        tbl_shoppingCart.setModel(table);
        table.addColumn("productId");
        table.addColumn("name");
        table.addColumn("price");
        table.addColumn("quantity");
        txt_total.setEditable(false);

        try {
            fillCart(user.getId());
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

    private void fillCart(int userId) throws SQLException {
        table.setRowCount(0);
        PreparedStatement preparedStatement = null;
        ResultSet resultSet = null;
        Connection connection = DriverManager.getConnection(connectionString);

        try {
            String query = "SELECT productId, name, price, quantity FROM shopping_cart WHERE userId = ?";
            preparedStatement = connection.prepareStatement(query);
            preparedStatement.setInt(1, userId);
            resultSet = preparedStatement.executeQuery();

            while (resultSet.next()) {
                String name = resultSet.getString("name");
                double price = resultSet.getDouble("price");
                int quantity = resultSet.getInt("quantity");
                String productId = resultSet.getString("productId");

                Object[] row = { productId, name, price, quantity};
                table.addRow(new Object[]{ productId, name, price, quantity});
            }

        } catch (SQLException e) {
            e.printStackTrace();
        } finally {
            
            try {
                if (resultSet != null) resultSet.close();
                if (preparedStatement != null) preparedStatement.close();
                if (connection != null) connection.close();
            } catch (SQLException e) {
                e.printStackTrace();
            }
        }
        updateTotalPrice();
    }
    
   private void updateTotalPrice() {
     double total = 0;
        for (int i = 0; i < table.getRowCount(); i++) {
            double price = (double) table.getValueAt(i, 2);
            int quantity = (int) table.getValueAt(i, 3);
            total += price * quantity;
        }
    txt_total.setText(String.format("%.2f", total));
}

    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tbl_shoppingCart = new javax.swing.JTable();
        btn_shoppingPage = new javax.swing.JToggleButton();
        jLabel1 = new javax.swing.JLabel();
        lbl_total = new javax.swing.JLabel();
        txt_total = new javax.swing.JTextField();
        btn_remove = new javax.swing.JToggleButton();
        btn_confirm = new javax.swing.JToggleButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tbl_shoppingCart.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        tbl_shoppingCart.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tbl_shoppingCart);

        btn_shoppingPage.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btn_shoppingPage.setText("Back");
        btn_shoppingPage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_shoppingPageActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel1.setText("Shopping Cart");

        lbl_total.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lbl_total.setText("Total Price :");

        txt_total.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txt_total.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_totalActionPerformed(evt);
            }
        });

        btn_remove.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btn_remove.setText("Remove");
        btn_remove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_removeActionPerformed(evt);
            }
        });

        btn_confirm.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btn_confirm.setText("Confirm");
        btn_confirm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_confirmActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(btn_shoppingPage)
                        .addGap(213, 213, 213)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lbl_total)
                                .addGap(18, 18, 18)
                                .addComponent(txt_total, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(186, 186, 186)
                                .addComponent(btn_remove)
                                .addGap(35, 35, 35)
                                .addComponent(btn_confirm))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 556, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(94, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_shoppingPage)
                    .addComponent(jLabel1))
                .addGap(79, 79, 79)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(39, 39, 39)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_total)
                    .addComponent(txt_total, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_remove)
                    .addComponent(btn_confirm))
                .addContainerGap(86, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btn_shoppingPageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_shoppingPageActionPerformed
        // TODO add your handling code here:
        ShoppingPage sp = new ShoppingPage(user);
        sp.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btn_shoppingPageActionPerformed

    private void txt_totalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_totalActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_txt_totalActionPerformed

    private void btn_removeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_removeActionPerformed
        // TODO add your handling code here:
        int selectedRow = tbl_shoppingCart.getSelectedRow();
        int userId = user.getId();
        if (selectedRow >= 0) {

            String productName = (tbl_shoppingCart.getValueAt(selectedRow, 1).toString());
            int productId = ProductDatabaseManager.getProductIdByName(productName);
            int quantity = (int) tbl_shoppingCart.getValueAt(selectedRow, 3);
            
            if(quantity==1){
            UserDatabaseManager.removeFromShoppingCart(UserDatabaseManager.getUserIdByEmail(this.user.getEmail()), productId, 1);
            }else{
            UserDatabaseManager.updateShoppingCartItemQuantity(userId, productId, quantity-1);
            }
            
            ProductDatabaseManager.updateProductStock(productId, ProductDatabaseManager.getProductStock(productId) + 1);
            
            try {
                fillCart(userId);
            } catch (SQLException ex) {
                Logger.getLogger(ShoppingCartPage.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Please select an item to remove.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btn_removeActionPerformed

    private void btn_confirmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_confirmActionPerformed
        // TODO add your handling code here:
        DeliveryPage d = new DeliveryPage(this.user);
        d.setVisible(true);
        dispose();
    }//GEN-LAST:event_btn_confirmActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ShoppingCartPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ShoppingCartPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ShoppingCartPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ShoppingCartPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
              
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JToggleButton btn_confirm;
    private javax.swing.JToggleButton btn_remove;
    private javax.swing.JToggleButton btn_shoppingPage;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbl_total;
    private javax.swing.JTable tbl_shoppingCart;
    private javax.swing.JTextField txt_total;
    // End of variables declaration//GEN-END:variables
}
